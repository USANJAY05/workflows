name: Count Lines in All Repos

on:
  schedule:
    - cron: "0 0 * * 1" # Runs every Monday at midnight UTC
  workflow_dispatch: # Allows manual trigger

permissions:
  contents: write  # ✅ Allows pushing changes to the repo

jobs:
  count-lines:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout this repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false  # Disable default token handling

      - name: Install GitHub CLI
        run: |
          sudo apt update
          sudo apt install -y gh

      - name: Authenticate GitHub CLI
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh auth status

      - name: Fetch all repositories
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh repo list usanjay05 --json name -q '.[].name' > repos.txt
          total_repos=$(wc -l < repos.txt)
          echo "TOTAL_REPOS=$total_repos" >> $GITHUB_ENV

      - name: Count lines in each repository
        run: |
          total_project_lines=0  # Initialize total line count
          timestamp=$(date +"%Y-%m-%d %H:%M:%S")
          
          echo "# 📊 Repository Line Counts" > repo-line-counts.md
          echo "🕒 **Generated on:** \`$timestamp\`" >> repo-line-counts.md
          echo "" >> repo-line-counts.md
          echo "## 🔹 **Total Repositories:** \`${TOTAL_REPOS}\`" >> repo-line-counts.md
          echo "" >> repo-line-counts.md
          echo "| Repository | Lines of Code |" >> repo-line-counts.md
          echo "|------------|--------------|" >> repo-line-counts.md

          while IFS= read -r repo; do
              echo "Processing $repo..."
              git clone --depth 1 "https://github.com/usanjay05/$repo.git"
              cd "$repo"

              # ✅ Count lines in relevant source files only
              repo_lines=$(find . -type f \( -name "*.sh" -o -name "*.py" -o -name "*.js" -o -name "*.ts" -o -name "*.css" -o -name "*.html" -o -name "*.md" \) -exec cat {} + | wc -l)

              # Handle empty repo case
              if [[ -z "$repo_lines" || "$repo_lines" -eq 0 ]]; then repo_lines=0; fi

              total_project_lines=$((total_project_lines + repo_lines))
              echo "| \`$repo\` | **$repo_lines** |" >> ../repo-line-counts.md
              cd ..
              rm -rf "$repo"
          done < repos.txt

          # Append total count at the bottom
          echo "" >> README.md
          echo "## 🏆 **Total Lines Across All Repositories:** \`$total_project_lines\`" >> repo-line-counts.md

      - name: Commit and Push Updated Line Counts
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add repo-line-counts.md
          git commit -m "Updated repository line counts - $(date +'%Y-%m-%d %H:%M:%S')"
          git push https://x-access-token:${GH_TOKEN}@github.com/usanjay05/workflows.git main
        continue-on-error: true
